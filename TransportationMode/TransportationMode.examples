Database: testtmdb
Restore : yes

Operator : checksline
Number   : 2
Signature: sline-> sline
Example  : query no_components(toline(checksline([const sline value ((2 2 3 3))], 3)));
Result   : 1


Operator : modifyboundary
Number   : 2
Signature: rectangle x int -> region
Example  : query no_components(modifyboundary([const rect value (2 3 2 3)],2));
Result   : 1


Operator : segment2region
Number   : 2
Signature: relation x attr x int-> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query segment2region(r, Curve, roadwidth) count;
Result   : 9


Operator : paveregion
Number   : 2
Signature: network x rel1 x attr x rel2 x attr1 x attr2 x int -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query paveregion(rn, allregions_in, Inborder, allregions_pave, Pave1, Pave2, roadwidth) count;
Result   : 9


Operator : junregion
Number   : 2
Signature: network x rel1 x attr1 x attr2 x int x rel2 x attr-> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query junregion(rn, pave_regions1, Pavement1, Pavement2, roadwidth, allregions_in, Inborder) count;
Result   : 9

Operator : decomposeregion
Number   : 2
Signature: region -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query decomposeregion([const region value ((((1 1)(5 1)(5 5)(1 5))))]) count;
Result   : 1

Operator : getpavenode1
Number   : 2
Signature: network x rel x attr1 x attr2 x attr3-> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query getpavenode1(rn, pave_regions1,Rid, Pavement1, Pavement2) count;
Result   : 43

Operator : getpavenode2
Number   : 2
Signature: int x rel x attr1 x attr2 -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query getpavenode2(subpaves1 count, pave_regions2, Rid, Crossreg) count;
Result   : 34

Operator : triangulation
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn)))
Example  : query triangulation([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1

Operator : triangulation2
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn)))
Example  : query triangulation2([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1

Operator : convex
Number   : 2
Signature: region -> bool
Example  : query convex([const region value ((((0 0)(0 5)(2 5))))]);
Result   : TRUE


Operator : geospath
Number   : 2
Signature: point x point x region -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query geospath([const point value (0 1)], [const point value (0 5)], [const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1


Operator : createdualgraph
Number   : 2
Signature: int x rel x rel -> dualgraph
Example  : query getadjnode(createdualgraph(1, dg_node, dg_edge), 6) count;
Result   : 0


Operator : walk_sp_old
Number   : 2
Signature: dualgraph x visualgraph x rel1 x rel2 x rel3  -> line
Example  : query no_components(walk_sp_old(dg, vg, query_loc1 feed addcounter[Id,1] filter[.Id = 200] remove[Id] consume, query_loc1 feed addcounter[Id,1] filter[.Id = 111] remove[Id] consume, tri_reg_new));
Result   : 1

Operator : walk_sp
Number   : 2
Signature: pavement x rel1 x rel2 x rel3  -> line
Example  : query no_components(walk_sp(pn, query_loc1 feed addcounter[Id,1] filter[.Id = 32] remove[Id] consume, query_loc1 feed addcounter[Id,1] filter[.Id = 26] remove[Id] consume, tri_reg_new));
Result   : 1

Operator : walk_sp_debug
Number   : 2
Signature: pavement x rel1 x rel2 x rel3 -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query walk_sp_type(pn, query_loc1 feed addcounter[Id,1] filter[.Id = 32] remove[Id] consume, query_loc1 feed addcounter[Id,1] filter[.Id = 26] remove[Id] consume, tri_reg_new);
Result   : 1

Operator : test_walk_sp
Number   : 2
Signature: dualgraph x visualgraph x rel1 x rel2 x rel3 -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query test_walk_sp(dg, vg, query_loc1 feed head[1] consume, query_loc1 feed head[2] consume, tri_reg_new) count;
Result   : 1

Operator: setpave_rid
Number  : 2
Signature: rel1 x rel2 x rtree -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query setpave_rid(dg_node feed head[1] consume, graph_node1, rtree_pave1) count;
Result   : 1


Operator : pave_loc_togp
Number   : 2
Signature: rel1 x rel2 x btree x network -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query pave_loc_togp(query_loc1, dg_node_rid, btree_dg_rid, rn) count;
Result   : 200


Operator : generate_wp1
Number   : 2
Signature: rel x int  -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query generate_wp1(dg_node, 5) count;
Result   : 5

Operator : generate_wp2
Number   : 2
Signature: rel x int  -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query generate_wp2(dg_node, 5) count;
Result   : 5

Operator : generate_wp3
Number   : 2
Signature: rel x int  -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query generate_wp3(dg_node, 5) count;
Result   : 5

Operator : zval
Number   : 2
Signature: point  -> int
Example  : query zval([const point value (0 0)]);
Result   : 0

Operator : zcurve
Number   : 2
Signature: rel x attr  -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query zcurve(vgnodes feed head[1] consume, Loc) count;
Result   : 0

Operator : regvertex
Number   : 2
Signature: reg -> (stream(tuple ((x1 t1) ... (xn tn))))
Example  : query regvertex([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 3

Operator : triangulation_new
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn)))
Example  : query triangulation_new([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1

Operator : triangulation_ext
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn)))
Example  : query triangulation_ext([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1


Operator : triangulation_new2
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn)))
Example  : query triangulation_new2([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1


Operator : triangulation_ext2
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn)))
Example  : query triangulation_ext2([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1

Operator : get_dg_edge
Number   : 2
Signature: rel1 x rel2 -> (stream(((x1 t1) ... (xn tn)))
Example  : query get_dg_edge(tri_reg_new_sort, regnodes) count;
Result   : 502


Operator : getvnode
Number   : 2
Signature: dualgraph x rel1 x rel2 x rel3 x btree-> (stream(((x1 t1) ... (xn tn)))
Example  : query getvnode(dg, query_loc1, tri_reg_new, vgnodes, vertex_tri, btr_vid) count;
Result   : 8

Operator : getvgedge
Number   : 2
Signature: dualgraph x rel1 x rel2 x rel3 x btree -> (stream(((x1 t1) ... (xn tn)))
Example  : query getvgedge(dg, vgnodes, tri_reg_new, vertex_tri, btr_vid) head[1] count;
Result   : 1

Operator : myinside
Number   : 2
Signature: line x region -> bool
Example  : query [const line value ((2 2 3 3))] myinside [const region value ((((0 0)(0 5)(2 5))))];
Result   : FALSE


Operator : at_point
Number   : 2
Signature: sline x point x bool -> real
Example  : query at_point([const sline value ((2 2 3 3))], [const point value (2 2)], TRUE);
Result   : 0

Operator : decomposetri
Number   : 2
Signature: rel -> (stream(((x1 t1) ... (xn tn)))
Example  : query decomposetri(tri_reg_new_sort) count;
Result   : 1437

Operator : createvgraph
Number   : 2
Signature: int x rel x rel -> visibilitygraph
Example  : query getadjnode(createvgraph(1, vgnodes, vgedges), 1) count;
Result   : 3

Operator : getcontour
Number   : 2
Signature: int -> (stream(((x1 t1) ... (xn tn)))
Example  : query getcontour(2) count;
Result   : 2


Operator : getpolygon
Number   : 2
Signature: rel x attr -> region
Example  : query no_components(getpolygon(getcontour(2) consume, Hole));
Result   : 1


Operator : getallpoints
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn))))
Example  : query getallpoints([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 3

Operator : rotationsweep
Number   : 2
Signature: rel x rel x rect x rel x attr -> (stream(((x1 t1) ... (xn tn))))
Example  : query rotationsweep(query_loc1 feed addcounter[Id,1] filter[.Id = 1] remove[Id] consume, allpoints, bbox(temp_reg), allholes, Hole) count;
Result   : 491

Operator : gethole
Number   : 2
Signature: region -> (stream(((x1 t1) ... (xn tn))))
Example  : query gethole([const region value ((((0 0)(0 5)(2 5))))]) count;
Result   : 1


Operator : smcdgte
Number   : 2
Signature: rel x rtree -> (stream(((x1 t1) ... (xn tn)))
Example  : query smcdgte(dg_node, rtree_dg) count;
Result   : 502


Operator : cellbox
Number   : 2
Signature: rect x int  (stream(((x1 t1) ... (xn tn))))
Example  : query cellbox([const rect value (0 100 0 100)], 10) count;
Result   : 100

Operator : create_bus_route1
Number   : 2
Signature: network x rel x attr_1 x attr_2 x attr_3 x btree x rel-> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_route1(rn,cell_join,Cellid,Cnt,Cover_area,section_cell_index, bus_para) count;
Result   : 0 


Operator : create_bus_route2
Number   : 2
Signature: network x rel1 x attr x btree x rel2 x attr1 x attr2 x attr3 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_route2(space_1,cell_join,Secid,section_cell_index,rough_pair, Start_cell_id, End_cell_id, Route_type) count; 
Result   : 0


Operator : refine_bus_route
Number   : 2
Signature: network x rel x attr1 x attr2 x attr3 x attr4 x attr5 x attr6 -> (stream(((x1 t1) ... (xn tn))))
Example  : query refine_bus_route(rn, busroutes_tmp, Br_id, Bus_route1, Bus_route2, Start_loc, End_loc, Route_type) count;
Result   : 0


Operator : create_bus_route3
Number   : 2
Signature: rel x attr1 x attr2 x real  -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_route3(busroutes, Br_id, Bus_route2, Route_type,roadwidth/2) count;
Result   : 0


Operator : create_bus_route4
Number   : 2
Signature: rel1 x attr1 x attr2 x attr3 x attr4 x rel2 x attr1 x attr2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_route4(newbusroutes, Br_id, Bus_route2, Route_type, Br_uid,bus_stops3, Br_id, StartSmaller) count; 
Result   : 10


Operator : create_bus_stop1
Number   : 2
Signature: network x rel1 x attr1 x attr2 x attr3 x attr4 x rel2 x btree x string-> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_stop1(rn, busroutes, Br_id, Bus_route1, Bus_route2, Route_type, subpaves2, btree_pave2, stop_para) count;
Result   : 0


Operator : create_bus_stop2
Number   : 2
Signature: network x rel x attr1 x attr2 x attr3 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_stop2(rn, bus_stops1, Br_id, Bus_stop_id, Bus_stop1) sortby[Br_id, Bus_stop_id] count;
Result   : 0


Operator : create_bus_stop3
Number   : 2
Signature: network x rel1 x attr x rel2 x attr1 x attr2 x attr3 x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_stop3(rn, busroutes, Bus_route1, bus_stops2, Br_id, Bus_stop_id, Bus_stop1, btree_sec_id) count;
Result   : 0


Operator : create_bus_stop4
Number   : 2
Signature: rel1 x attra x attrb x rel2 x attr1 x attr2 x attr3 x attr4 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_stop4(newbusroutes, Bus_route1, Bus_route2, bus_stops3, Br_id, Bus_stop_id, Bus_stop2, StartSmaller) count; 
Result   : 0


Operator : create_bus_stop5
Number   : 2
Signature: rel1 x attr x rel2 x attr1 x attr2 x attr3 x attr4 x attr5 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_stop5(final_busroutes, Bus_direction, bus_stops4, Br_id, Br_uid, Bus_stop_id, Bus_stop2, Bus_pos) count; 
Result   : 0

Operator : getbusstops
Number   : 2
Signature: rel1 x btree x rel2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query getbusstops(final_busstops, btree_bs, final_busroutes) count;
Result   : 0


Operator : getbusroutes
Number   : 2
Signature: rel1 x btree x rel2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query getbusroutes(final_busstops, btree_bs, final_busroutes) count;
Result   : 0

Operator : brgeodata
Number   : 2
Signature: busroute -> sline
Example  : query size(brgeodata([const busroute value ((1 TRUE)((((2.0 2.0 2.0 3.0)))) )]));
Result   : 1

Operator : bsgeodata
Number   : 2
Signature: busstop x busroute -> point
Example  : query bsgeodata([const busstop value (1 1 TRUE)], [const busroute value ((1 TRUE)((((2.0 2.0 2.0 3.0))) (((2.0 3.0 4.0 4.0))) ) )]);
Result   : (2.0 3.0)

Operator : up_down
Number   : 2
Signature: busstop -> bool
Example  : query up_down([const busstop value (1 1 TRUE)]);
Result   : TRUE


Operator : thebusnetwork
Number   : 2
Signature: int x rel x rel x rel-> busnetwork
Example  : query ref_id(bn);
Result   : 2

Operator : thepavement 
Number   : 2
Signature: int x rel -> pavenetwork
Example  : query ref_id(thepavement(1, dg_node));
Result   : 1


Operator : bn_busstops
Number   : 2
Signature: busnetwork -> rel
Example  : query bn_busstops(bn) count;
Result   : 0


Operator : bn_busroutes
Number   : 2
Signature: busnetwork -> rel
Example  : query bn_busroutes(bn) count;
Result   : 0


Operator : brsegments
Number   : 2
Signature: line x line -> (stream(((x1 t1) ... (xn tn))))
Example  : query brsegments([const line value ((2 2 3 3))], [const line value ((3 3 4 4))]) count;
Result   : 0


Operator : mapbstopave
Number   : 2
Signature: busnetwork x rtree x rel x int x real -> (stream(((x1 t1) ... (xn tn))))
Example  : query mapbstopave(bn, rtree_dg2, dg_node_sort, roadwidth, map_para) count;
Result   : 0


Operator : bs_neighbors1
Number   : 2
Signature: dualgraph x visibility graph x rel1 x rel2 x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query bs_neighbors1(dg, vg, tri_reg_new, bs_pave_sort, rtree_bs_pave)  count;
Result   : 0

Operator : bs_neighbors2
Number   : 2
Signature: busnetwork -> (stream(((x1 t1) ... (xn tn))))
Example  : query bs_neighbors2(bn) count;
Result   : 0

Operator : bs_neighbors3
Number   : 2
Signature: rel1 x rel2 x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query bs_neighbors3(bus_time_table_compact, all_bus_rel, btree_mo) count;
Result   : 0


Operator : createbgraph
Number   : 2
Signature: int x rel1 x rel2 x rel3 x rel4 -> busgraph
Example  : query getadjnode(bg,1) count;
Result   : 0


Operator : getadjnode
Number   : 2
Signature: busgraph x int  -> (stream(((x1 t1) ... (xn tn))))
Example  : query getadjnode(bg, 2) count;
Result   : 0

Operator : bnnavigation
Number   : 2
Signature: busstop x busstop x busnetwork x instant x int-> (stream(((x1 t1) ... (xn tn))))
Example  : query bnnavigation(bus_stops feed addcounter[Id,1] filter[.Id = 450] extract[Bus_stop], bus_stops feed addcounter[Id,1] filter[.Id = 540] extract[Bus_stop], bn, theInstant(2011,11,6,16,0,0,0),0) count;
Result   : 0

Operator : test_bnnavigation
Number   : 2
Signature: rel x rel x busnetwork x instant x int-> (stream(((x1 t1) ... (xn tn))))
Example  : query test_bnnavigation(bus_stops, bus_stops, bn,theInstant(2010,12,5,0,0,0,0) ,0);
Result   : TRUE

Operator : getstopid
Number   : 2
Signature: busstop -> int
Example  : query getstopid([const busstop value (1 2 TRUE)]);
Result   : 2


Operator : get_route_density1
Number   : 2
Signature: network x rel1 x attr1 x attr2 x btree x attr2 x attr1 x attr2 x periods1 x periods2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query get_route_density1(rn,traffic_rel1, Secid, Flow, btree_traffic, busroutes, Br_id, Bus_route1, Monday,Sunday) count;
Result   : 0


Operator : set_ts_nightbus
Number   : 2
Signature: rel x attr1 x attr2 x attr3 x periods1 x periods2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query set_ts_nightbus(night_bus, Br_id, Duration1, Duration2, night1,night2) count;
Result   : 0


Operator : set_ts_daybus
Number   : 2
Signature: rel x attr1 x attr2 x attr3 x periods1 x periods2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query set_ts_daybus(day_bus, Br_id, Duration1, Duration2,Monday,Sunday) count;
Result   : 0


Operator : set_br_speed
Number   : 2
Signature: network x rel1 x attr1 x attr2 x rel2 x attr x rel3 x attr -> (stream(((x1 t1) ... (xn tn))))
Example  : query set_br_speed(rn, busroutes, Br_id, Bus_route1, streets, Vmax, final_busroutes, StartSmaller) count;
Result   : 0


Operator : create_bus_segment_speed
Number   : 2
Signature: rel1 x attr1 x attr2 x attr3 x attr4 x rel2 x attr1 x attr2 x btree1 x rel3 x btree2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_bus_segment_speed(final_busroutes, Br_id, Bus_route, Bus_direction, StartSmaller, final_busstops, Bus_pos, Stop_direction, btree_bs, br_speed, btree_br_speed) count;
Result   : 0

Operator : create_night_bus_mo
Number   : 2
Signature: rel1 x rel2 x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_night_bus_mo(ts_nightbus,bus_segment_speed,btree_seg_speed) count;
Result   : 0

Operator : create_daytime_bus_mo
Number   : 2
Signature: rel1 x rel2 x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_daytime_bus_mo(ts_daybus,bus_segment_speed,btree_seg_speed) count;
Result   : 0


Operator : create_time_table1
Number   : 2
Signature: rel1 x rel2 x btree x periods1 x periods2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_time_table1(final_busstops, all_bus_rel, btree_mo, night1, night2) count;
Result   : 0


Operator : create_time_table2
Number   : 2
Signature: rel1 x rel2 x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query create_time_table2(mstops_2, genmo_metro_2, btree_metro2) count;
Result   : 0


Operator : refmo2genmo 
Number   : 2
Signature: rel1 x rel2 x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query refmo2genmo(all_bus_rel, bus_routes, btree_br) count;
Result   : 0


Operator : themetronetwork
Number   : 2
Signature: int x rel x rel x rel-> metronetwork
Example  : query ref_id(mn);
Result   : 1


Operator : ms_neighbors1
Number   : 2
Signature: rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query ms_neighbors1(mstops) count;
Result   : 0


Operator : ms_neighbors2
Number   : 2
Signature: metronetwork x rel x btree x rel x btree -> (stream(((x1 t1) ... (xn tn))))
Example  : query ms_neighbors2(mn, metro_time_table, btree_time_table,genmo_metro_1,btree_metro1) count;
Result   : 0

Operator : createmgraph
Number   : 2
Signature: int x rel1 x rel2 x rel3 -> metrograph
Example  : query getadjnode(createmgraph(1, mstops, msneighbors1, msneighbors2),1) count;
Result   : 0

Operator : createmetroroute
Number   : 2
Signature: dualgraph x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query createmetroroute(dg_cell, metro_para) count;
Result   : 0

Operator : createmetrostop
Number   : 2
Signature: rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query createmetrostop(mroutes) count;
Result   : 0

Operator : createmetromo
Number   : 2
Signature: rel x duration -> (stream(((x1 t1) ... (xn tn))))
Example  : query createmetromo(mroutes, theRange(theInstant(2010,12,6,6,0,0,0), theInstant(2010,12,6,0,0,0), TRUE, TRUE)) count;
Result   : 0


Operator : mapmstopave
Number   : 2
Signature: rel x rel x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query mapmstopave(mstops, dg_node_sort,rtree_dg) count;
Result   : 0

Operator : mnnavigation
Number   : 2
Signature: busstop x busstop x metronetwork x instant -> (stream(((x1 t1) ... (xn tn))))
Example  : query mnnavigation(mstops feed addcounter[Id,1] filter[.Id = 33] extract[Ms_stop], mstops feed addcounter[Id,1] filter[.Id = 34] extract[Ms_stop], mn, theInstant(2011,11,6,16,0,0,0)) count
Result   : 0


Operator : thefloor
Number   : 1
Signature: float x region -> floor3d
Example  : query getheight(thefloor(3.0, [const region value ((((1 1)(5 1)(5 5)(1 5))))]));
Result   : 3


Operator : getheight
Number   : 1
Signature: floor3d -> float
Example  : query getheight(thefloor(3.0, [const region value ((((1 1)(5 1)(5 5)(1 5))))]));
Result   : 3.0


Operator : getregion
Number   : 1
Signature: float -> region
Example  : query area(getregion(thefloor(3.0, [const region value ((((1 1)(5 1)(5 5)(1 5))))])));
Result   : 16


Operator : thedoor
Number   : 1
Signature: int x line x int x line x mbool x bool -> door3d
Example  : query type_of_door(thedoor(1, [const line value ((2 2 3 3))], 2, [const line value ((2 2 3 3))], [const mbool value ((("begin of time" "2010-10-10" TRUE FALSE) TRUE) (("2010-10-11" "end of time" TRUE FALSE) TRUE))],FALSE));
Result   : FALSE

Operator : type_of_door
Number   : 1
Signature: door3d -> bool
Example  : query type_of_door(thedoor(1, [const line value ((2 2 3 3))], 2, [const line value ((2 2 3 3))], [const mbool value ((("begin of time" "2010-10-10" TRUE FALSE) TRUE) (("2010-10-11" "end of time" TRUE FALSE) TRUE))],FALSE));
Result   : FALSE



Operator : loc_of_door
Number   : 1
Signature: door3d x int -> line 
Example  : query loc_of_door(thedoor(1, [const line value ((2 2 3 3))], 2, [const line value ((2 2 3 3))], [const mbool value ((("begin of time" "2010-10-10" TRUE FALSE) TRUE) (("2010-10-11" "end of time" TRUE FALSE) TRUE))],FALSE),1);
Result   : ((2.0 2.0 3.0 3.0))

Operator : state_of_door
Number   : 1
Signature: door3d -> mbool
Example  : query no_components(state_of_door(thedoor(1, [const line value ((2 2 3 3))], 2, [const line value ((2 2 3 3))], [const mbool value ((("begin of time" "2010-10-10" TRUE FALSE) TRUE) (("2010-10-11" "end of time" TRUE FALSE) TRUE))],FALSE)));
Result   : 2


Operator : get_floor
Number   : 1
Signature: groom x int -> floor3d
Example  : query getheight(get_floor([const groom value ((2.0 ( (((1.0 1.0)(1.0 5.0)(5.0 5.0)(5.0 1.0))) ) ))], 0));
Result   : 2

Operator : add_height_groom
Number   : 1
Signature: groom x real -> groom
Example  : query getheight(get_floor(add_height_groom([const groom value ((2.0 ( (((1.0 1.0)(1.0 5.0)(5.0 5.0)(5.0 1.0))) ) ))], 3.0),0));
Result   : 5.0


Operator : translate_groom
Number   : 1
Signature: groom x real x real -> groom
Example  : query getheight(get_floor([const groom value ((2.0 ( (((1.0 1.0)(1.0 5.0)(5.0 5.0)(5.0 1.0))) ) ))] translate_groom [2.0, 0.0], 0));
Result   : 2


Operator : size
Number   : 1
Signature: line3d -> real 
Example  : query size([const line3d value ((2.0 2.0 2.0)(2.0 2.0 3.0))]);
Result   : 1.0


Operator : bbox3d
Number   : 1
Signature: line3d -> rect3
Example  : query bbox3d([const line3d value ( (0.0 0.0 0.0) (1.0 1.0 1.0))]);
Result   : ( (0,0,0) - (1,1,1) )


Operator : thebuilding
Number   : 1
Signature: int x string x rel x rel -> building
Example  : query ref_id(thebuilding(3, "CINEMA", cinema, cinema_extend));
Result   : 4

Operator : theindoor 
Number   : 1
Signature: int x rel x rel -> indoorinfra
Example  : query ref_id(theindoor(1, building_paths, buildingplustype));
Result   : 2


Operator : createdoor3d
Number   : 1
Signature: rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query createdoor3d(cinema) count;
Result   : 63


Operator : createdoorbox
Number   : 1
Signature: rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query createdoorbox(cinema) count;
Result   : 63


Operator : createdoor1
Number   : 1
Signature: rel1 x rel2 x rtree x attr1 x attr2 x attr3 -> (stream(((x1 t1) ... (xn tn))))
Example  : query createdoor1(cinema, box3d_rel, rtree_box3d, Groom_oid, Groom_tid, Box3d) count;
Result   : 47

Operator : createdoor2
Number   : 1
Signature: rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query createdoor2(cinema) count;
Result   : 14

Operator : createadjdoor1
Number   : 1
Signature: rel1 x rel2 x btree x attr1 x attr2 x attr3 x attr4 -> (stream(((x1 t1) ... (xn tn))))
Example  : query createadjdoor1(cinema, node_rel_cinema, btree_gid_cinema, Door, Door_loc, Groom_oid1, Doorheight) count;
Result   : 84


Operator : createadjdoor2
Number   : 1
Signature: rel x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query createadjdoor2(node_rel_cinema, rtree_node_cinema) count;
Result   : 46

Operator : path_in_region 
Number   : 1
Signature: region x point x point -> line 
Example  : query size(path_in_region([const region value ((((1 1)(5 1)(5 5)(1 5))))], [const point value (1 1)], [const point value (1 2) ]));
Result   : 1 

Operator : createigraph
Number   : 2
Signature: int x rel x rel x string -> indoorgraph
Example  : query getadjnode(createigraph(3, node_rel_cinema, edge_rel_cinema, "CINEMA"),1) count;
Result   : 1


Operator : generate_ip1
Number   : 2
Signature: rel x int x bool -> (stream(((x1 t1) ... (xn tn)))
Example  : query generate_ip1(cinema, 50, TRUE) count;
Result   : 50


Operator : generate_mo1
Number   : 2
Signature: indoorgraph x rel x btree x rtree x int x periods-> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_mo1(ig_cinema, cinema, btree_groom_cinema, rtree_groom_cinema, 1.0, Monday_cinema) count;
Result   : 1

Operator : getindoorpath
Number   : 2
Signature: string x int -> line3d
Example  : query size(getindoorpath("UNIVERSITY", 10001001)) > 10.0;
Result   : TRUE


Operator : indoornavigation
Number   : 2
Signature: rel x genloc x genloc x rel x btree x int-> (stream(((x1 t1) ... (xn tn))))
Example  : query indoornavigation(ig_cinema, ip_cinema feed addcounter[Id,1] filter[.Id = 1] extract[Loc1],ip_cinema feed addcounter[Id,1] filter[.Id = 5] extract[Loc1], cinema, btree_groom_cinema, 0) count;
Result   : 1


Operator : maxrect 
Number   : 1
Signature: region -> rect
Example  : query size(maxrect([const region value ((((1 1)(5 2)(6 6)(2 5))))]));
Result   : 4


Operator : getrect1 
Number   : 1
Signature: rel x attr1 x attr2 x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query getrect1(new_region_elems, Id, Covarea, building_para) count;
Result   : 9 


Operator : path_to_building 
Number   : 1
Signature: rel1 x rel2 x btree x space-> (stream(((x1 t1) ... (xn tn))))
Example  : query path_to_building(buildingplustype, new_region_elems, btree_building, space_1) count;
Result   : 1


Operator : set_building_type 
Number   : 1
Signature: rel x rtree x space-> (stream(((x1 t1) ... (xn tn))))
Example  : query set_building_type(building_sort, rtree_build, space_1) count;
Result   : 6


Operator : remove_dirty 
Number   : 1
Signature: rel x attr1 x attr2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query remove_dirty(region_elems, Id, Covarea) count;
Result   : 4


Operator : ref_id
Number   : 1
Signature: genloc -> int
Example  : query ref_id([const genloc value (1 (5.0 4.42 ))]);
Result   : 1

Operator : tm_at
Number   : 1
Signature: genmo x string -> genmo
Example  : query no_components(tm_at([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))], "Indoor"));
Result   : 1

Operator : tm_at2
Number   : 1
Signature: genmo x mreal x string -> genmo
Example  : query no_components(tm_at2([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))], genmoindex([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]),"Indoor"));
Result   : 1

Operator : tm_at3
Number   : 1
Signature: genmo x mreal x genloc x string -> genmo
Example  : query no_components(tm_at3([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))], genmoindex([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]),tm_genloc(2, -1.0, -1.0), "Indoor"));
Result   : 0


Operator : val
Number   : 1
Signature: igenloc -> genloc
Example  : query val([const igenloc value ((instant "2011-3-1-13:00") (2 (2.0 3.0)))]);
Result   : (2 (2.0 3.0))

Operator : inst
Number   : 1
Signature: igenloc -> instant
Example  : query inst([const igenloc value ((instant "2011-3-1-13:00") (2 (2.0 3.0)))]);
Result   : (instant "2011-3-1-13:00")


Operator : contains
Number   : 1
Signature: genmo x string -> bool
Example  : query [const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))] contains "Indoor";
Result   : TRUE

Operator : tmcontains
Number   : 1
Signature: genmo x mreal x int x string -> bool
Example  : query tmcontains([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))], genmoindex([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]), 123, "Indoor")
Result   : FALSE


Operator : tm_duration
Number   : 1
Signature: periods x string -> real
Example  : query tm_duration([const periods value (("2010-11-20-07:01" "2010-11-20-07:45" TRUE TRUE))], "M");
Result   : 43.9999999998


Operator : initial
Number   : 1
Signature: genmo -> igenloc
Example  : query initial([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]);
Result   : (("2010-12-7-8:03:25") (1 (2.0 3.0)))

Operator : final
Number   : 1
Signature: genmo -> igenloc
Example  : query final([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]);
Result   : (("2010-12-7-8:04:10") (1 (3.0 3.0)))

Operator : tm_build_id
Number   : 1
Signature: int x space -> int
Example  : query tm_build_id(0, [const space value ( 1 )]);
Result   : -1

Operator : bcontains
Number   : 1
Signature: genmo x int -> bool
Example  : query [const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))] bcontains 1
Result   : TRUE

Operator : bcontains2
Number   : 1
Signature: genmo x mreal x int -> bool
Example  : query bcontains2([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))],  genmoindex([const genmo value  ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]),  1)
Result   : TRUE

Operator : tm_room_id
Number   : 1
Signature: int x space -> int
Example  : query tm_room_id(0, [const space value ( 1 )]);
Result   : -1


Operator : tm_plus_id
Number   : 1
Signature: int x int -> int
Example  : query tm_plus_id(20, 133);
Result   : 20133


Operator : tm_passes
Number   : 1
Signature: genmo x region x space -> bool
Example  : query tm_passes([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (0 (2.0 3.0)) (0 (3.0 3.0)) "Free"))], [const region value ((((0.0 0.0)(20.0 0.0)(20.0 10.0)(0.0 10.0))))], [const space value (1)]);
Result   : TRUE

Operator : tm_distance
Number   : 1
Signature: genloc x point x space -> real
Example  : query tm_distance([const genloc value (0 (2.0 3.0))], [const point value (2.0 3.0)], [const space value (1)]);
Result   : 0.0

Operator : tm_genloc
Number   : 1
Signature: int x real x real -> genloc
Example  : query ref_id(tm_genloc(100, 2.0, 2.0));
Result   : 100


Operator : modeval
Number   : 1
Signature: genmo -> int
Example  : query modeval([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (0 (2.0 3.0)) (0 (3.0 3.0)) "Free"))]);
Result   : 1

Operator : genmoindex
Number   : 1
Signature: genmo -> mreal
Example  : query no_components(genmoindex([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (0 (2.0 3.0)) (0 (3.0 3.0)) "Free"))]));
Result   : 1

Operator : tm_mr2ms
Number   : 1
Signature: mreal -> mstring
Example  : query deftime(tm_mr2ms([const mreal value ((("2011-11-10-09:02" "2011-11-10-09:03:01.142" TRUE FALSE)  (2.0 0.0 20.0 TRUE)))]))
Result   : ("2011-11-10-09:02" "2011-11-10-09:03:01.142" TRUE FALSE)

Operator : setref_id
Number   : 1
Signature: genmo -> (stream uT)
Example  : query ref_id([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]) count;
Result   : 1


Operator : deftime
Number   : 1
Signature: genmo -> periods
Example  : query deftime([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 3.0)) (1 (3.0 3.0)) "Indoor"))]);
Result   : (periods (("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE)))

Operator : tm_translate
Number   : 1
Signature: genmo x duration -> genmo
Example  : query deftime([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE)(1 (2.0 3.0))(1 (3.0 3.0)) "Indoor"))] tm_translate [const duration value (1 0)])
Result   : (periods (("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE)))


Operator : tm_translate2
Number   : 1
Signature: periods x duration -> periods
Example  : query theRange(theInstant(2011,11,6,8,0,0,0), theInstant(2011,11,7,22,0,0,0), TRUE, FALSE) tm_translate2 [const duration value (1 0)]
Result   : (periods (("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE)))


Operator : no_components 
Number   : 1
Signature: genmo -> int 
Example  : query no_components([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))]);
Result   : 1 

Operator : lowres 
Number   : 1
Signature: genmo -> genmo
Example  : query no_components(lowres([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))]));
Result   : 1 


Operator : trajectory
Number   : 1
Signature: mpoint3d -> line3d
Example  : query size(trajectory([const mpoint3d value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 2.0 3.0) (1 3.0 3.0)))]));
Result   : 1


Operator : gentrajectory
Number   : 1
Signature: genmo x space -> genrange
Example  : query size(trajectory([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (0 (2.0 -1.0)) (0 (3.0 -1.0)) "Car"))], [const space value (1)]));
Result   : 1

Operator : genrangevisible
Number   : 1
Signature: genrange -> (stream(((x1 t1) ... (xn tn))))
Example  : query genrangevisible(trajectory([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (0 (2.0 -1.0)) (0 (3.0 -1.0)) "Free"))], [const space value (1)]),[const space value (1)]) count;
Result   : 1


Operator : getmode 
Number   : 1
Signature: genmo -> (stream(((x1 t1) ... (xn tn))))
Example  : query getmode([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))]) count;
Result   : 1 


Operator : getref 
Number   : 1
Signature: genmo -> (stream(((x1 t1) ... (xn tn))))
Example  : query getref([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))]) count;
Result   : 1


Operator : atinstant 
Number   : 1
Signature: genmo x instant -> igenloc
Example  : query [const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))] atinstant  [const instant value "2010-12-7-8:03:25"];
Result   : ("2010-12-7-8:03:25" (1 (2.0 -1.0))))


Operator : atperiods 
Number   : 1
Signature: genmo x periods -> genmo
Example  : query no_components([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))] atperiods  [const periods value (("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE TRUE))]);
Result   : 1

Operator : mapgenmo 
Number   : 1
Signature: genmo x mpoint -> mpoint
Example  : query no_components(mapgenmo([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (10 (-1.0 -1.0)) (10 (-1.0 -1.0)) "Bus"))], [const mpoint value ((("2007-02-27-16:05:54.922" "2007-02-27-16:05:55.922" TRUE FALSE) (7.495008333333334 51.37592333333333 7.495061666666667 51.37594166666667)))]));
Result   : 0



Operator : units 
Number   : 1
Signature: genmo -> (stream(((x1 t1) ... (xn tn))))
Example  : query units([const genmo value ((("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car"))]) count
Result   : 1

Operator : getloc 
Number   : 1
Signature: ugenloc x bool -> point
Example  : query getloc([const ugenloc value (("2010-12-7-8:03:25" "2010-12-7-8:04:10" TRUE FALSE) (1 (2.0 -1.0)) (1 (3.0 -1.0)) "Car")], TRUE)
Result   : (2.0, -1.0)

Operator : tm_traffic
Number   : 1
Signature: relation x periods x relation x bool -> (stream(((x1 t1) ... (xn tn))))
Example  : query tm_traffic(all_genmo, Q21_qt2, roadsegs, true) count;
Result   : 10


Operator : thespace 
Number   : 1
Signature: int -> space
Example  : query ref_id(thespace(1));
Result   : 1 

Operator : putinfra
Number   : 1
Signature: space x network -> (stream(((x1 t1) ... (xn tn))))
Example  : query putinfra(space_1, rn) count;
Result   : 1 

Operator : putrel
Number   : 1
Signature: space x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query putrel(space_1, streets_speed) count;
Result   : 1 


Operator : getinfra
Number   : 1
Signature: space x string -> rel
Example  : query getinfra([const space value (1)], "FREESPACE") count;
Result   : 0


Operator : addinfragraph 
Number   : 1
Signature: busnetwork x busgraph -> (stream(((x1 t1) ... (xn tn))))
Example  : query addinfragraph(bn,bg) count;
Result   : 1


Operator : genmo_tm_list
Number   : 1
Signature: bool -> (stream(((x1 t1) ... (xn tn))))
Example  : query genmo_tm_list(TRUE) count;
Result   : 18

Operator : generate_genmo
Number   : 1
Signature: space x periods x real x int -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_genmo(space_1, TwoDays, 5.0, 7) count;
Result   : 5

Operator : generate_bench_1
Number   : 1
Signature: space x periods x real x rel x rel x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_bench_1(space_1, hw_time, 5.0, distri_para1, H_Building, W_Building) count;
Result   : 5

Operator : generate_bench_2
Number   : 1
Signature: space x periods x real x rel x string -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_bench_2(space_1, rr_time_thursday, 5.0, d_area, "REGION") count;
Result   : 5


Operator : generate_bench_3
Number   : 1
Signature: space x periods x real x rel x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_bench_3(space_1, ww_time_monday, 3.0, NN_Building, rtree_NNB) count;
Result   : 3


Operator : generate_bench_4
Number   : 1
Signature: space x periods x real x rel x rel x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_bench_4(space_1, ww_time_thursday, 20.0, distri_para2, NN_Building) count;
Result   : 20

Operator : generate_bench_5
Number   : 1
Signature: space x periods x real x rel x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_bench_5(space_1, hw_time, 5.0, distri_para3, H_Building, W_Building) count;
Result   : 5


Operator : generate_car
Number   : 1
Signature: network x periods x real x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query generate_car(space_1, TwoDays, 10.0, streets_speed) project[Trip2] count;
Result   : 10

Operator : navigation1
Number   : 1
Signature: space x rel1 x rel2 x instant x rel x rel x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query navigation1(space_1, query_loc1, query_loc2, theInstant(2010,12,6,9,0,0,0), tri_reg_new, bs_pave_sort, rtree_bs_pave) count;
Result   : 10


Operator : get_rg_nodes
Number   : 1
Signature: network -> (stream(((x1 t1) ... (xn tn))))
Example  : query get_rg_nodes(rn) head[10] count;
Result   : 10

Operator : get_rg_edges1
Number   : 1
Signature: rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query get_rg_edges1(rg_nodes) count;
Result   : 24

Operator : get_rg_edges2
Number   : 1
Signature: network x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query get_rg_edges2(rn, rg_nodes) count;
Result   : 24

Operator : get_p_edges3
Number   : 1
Signature: rel x rel x btree x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query get_p_edges3(P_L, P_nodes1, btree_PN1, P_Nodes2) count;
Result   : 24

Operator : get_p_edges4
Number   : 1
Signature: rel x rel -> (stream(((x1 t1) ... (xn tn))))
Example  : query get_p_edges4(P_Nodes2_tmp, DOPedesRegions) count;
Result   : 24

Operator : theosmpave
Number   : 2
Signature: int x rel x rel -> osmpavenetwork
Example  : query ref_id(theosmpave(1, Pave_line, Pave_region));
Result   : 1

Operator : createosmgraph
Number   : 2
Signature: int x rel1 x rel2 -> osmpavegraph
Example  : query getadjnode(createosmgraph(1, PNodes, P_ADJ), 1) count;
Result   : 2

Operator : osmlocmap
Number   : 2
Signature: rel1 x rel2 -> (stream(((x1 t1) ... (xn tn))))
Example  : query osmlocmap(POI_L, POI_R) count;
Result   : 2

Operator : osm_path
Number   : 2
Signature: rel1 x rel2 x osmpavenetwork -> sline
Example  : query size(osm_path(q_loc1, q_loc2, DO_pave));
Result   : 3.5

Operator : creatergraph
Number   : 2
Signature: int x rel1 x rel2 x rel3 -> roadgraph
Example  : query getadjnode(creatergraph(1, rg_nodes, rg_edges1, rg_edges2), 1) count;
Result   : 2

Operator : shortestpath_tm
Number   : 2
Signature: gpoint x gpoint x roadgraph x network -> (stream(((x1 t1) ... (xn tn))))
Example  : query no_components(shortestpath_tm(gp1, gp2, rg, rn));
Result   : 1


Operator : modifyline
Number   : 1
Signature: sline -> sline
Example  : query size(modifyline([const sline value((2.0 1.0 3.0 1.0))]));
Result   : 1

Operator : refinedata
Number   : 1
Signature: sline -> sline
Example  : query size(refinedata([const sline value((2.0 1.0 3.0 1.0))]));
Result   : 1


Operator : filterdisjoint
Number   : 1
Signature: rel x btree x string -> (stream(((x1 t1) ... (xn tn))))
Example  : query filterdisjoint(DOPedes_L_Join, btree_l, "LINE") count;
Result   : 1


Operator : refinebr
Number   : 1
Signature: rel x attr x attr -> (stream(((x1 t1) ... (xn tn))))
Example  : query refinebr(DOBusRoutes, RelId, BRoute) count;
Result   : 1


Operator : bs_stops
Number   : 1
Signature: rel x rel x btree  -> (stream(((x1 t1) ... (xn tn))))
Example  : query bs_stops(BusSegs, DOBusStops, btree_bs) count;
Result   : 0


Operator : set_bs_speed
Number   : 1
Signature: rel x rel x rel x attr -> (stream(((x1 t1) ... (xn tn))))
Example  : query set_bs_speed(BusSegs, BusRoadSegs, streets_speed, Vmax) count;
Result   : 0


Operator : set_stop_loc
Number   : 1
Signature: line -> (stream(((x1 t1) ... (xn tn))))
Example  : query set_stop_loc([const line value ()]) count;
Result   : 0

Operator : getmetrodata
Number   : 1
Signature: rel x rel x string -> (stream(((x1 t1) ... (xn tn))))
Example  : query getmetrodata(MetroSegs, MetroRoadSegs, "STOP") count;
Result   : 0


Operator : sl2reg
Number   : 1
Signature: sline -> region
Example  : query size(sl2reg([const sline value ((2.0 2.0 2.0 3.0)(2.0 3.0 3.0 3.0)(3.0 3.0 2.0 2.0))]));
Result   : 5.5


Operator : tm_segs
Number   : 1
Signature: region -> (stream(((x1 t1) ... (xn tn))))
Example  : query tm_segs([const region value ((((1 1)(5 1)(5 5)(1 5))))]) count;
Result   : 4


Operator : tm_join1
Number   : 1
Signature: relation x relation x rtree -> (stream(((x1 t1) ... (xn tn))))
Example  : query tm_join1(street_sections, cellbox_list, rtree_box) count;
Result   : 4


Operator : nearstops_building
Number   : 1
Signature: space x string -> (stream(((x1 t1) ... (xn tn))))
Example  : query nearstops_building(space_1, "Bus") count;
Result   : 0


Operator : decomposegenmo
Number   : 1
Signature: rel x real x bool -> (stream(((x1 t1) ... (xn tn))))
Example  : query decomposegenmo(all_genmo, 200.0, TRUE) count;
Result   : 1


Operator : bulkloadtmrtree
Number   : 1
Signature: stream (tuple (x1 t1)...(xn tn) (id tid))) xi xj) x attr1 x attr2 x attr3 x int-> (tmrtree<3> (tuple ((x1 t1)...(xn tn))) ti false)
Example  : query genmo_units feed addid bulkloadtmrtree[Time, Box2d, Mode, 1]
Result   : file_platform

Operator : tmrtreemode
Number   : 1
Signature: (tmrtree<3> (tuple ((x1 t1)...(xn tn))) ti false) x rel x attr -> stream (tuple (x1 t1)...(xn tn) (id tid))) xi xj)
Example  : query tmrtreemode(TM_RTree, genmo_units, Mode) count
Result   : 0

Operator : tm_nodes
Number   : 1
Signature: (tmrtree<3> (tuple ((x1 t1)...(xn tn))) ti false) -> stream (tuple (x1 t1)...(xn tn) (id tid))) xi xj)
Example  : query nodes(TM_RTree) filter[.Level = 0] count
Result   : 1


Operator : range_tmrtree
Number   : 1
Signature: (tmrtree<3> (tuple ((x1 t1)...(xn tn))) ti false) x rel  x rel x int -> stream (tuple (x1 t1)...(xn tn) (id tid))) xi xj)
Example  : query range_tmrtree(TM_RTree, genmo_units, query_rel, 1)  count
Result   : 0


Operator : mode2str
Number   : 1
Signature: int -> string
Example  : query mode2str(0, FALSE);
Result   : "Bus"


Operator : range_query
Number   : 1
Signature: rel x rel -> stream (tuple (x1 t1)...(xn tn) (id tid))) xi xj)
Example  : query range_query(genmo_union, query_rel) count;
Result   : 0


Operator : mode2bit
Number   : 1
Signature: int -> int
Example  : query mode2bit(2);
Result   : 1
